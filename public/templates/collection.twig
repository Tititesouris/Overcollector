{% import "cosmetic.twig" as cosmeticMacro %}
{% extends "page.twig" %}
{% block body %}
    {% set settings = SESSION.user.settings %}
    {% set pages = {
    "start": (GET.page ?? 0) * (settings["collection-heroes-per-page"].value ?? 3),
    "end": (GET.page ?? 0 + 1) * (settings["collection-heroes-per-page"].value ?? 3)
    } %}
    {% set heroStats = {} %}
    {% set categoryStats = {} %}
    {% set typeStats = {} %}
    {% set totalStats = {} %}
    {% for hero, types in SESSION.allcosmetics %}
        {% set heroOwned = 0 %}
        {% set heroTotal = 0 %}
        {% set heroTypeStats = {} %}
        {% for type, cosmetics in types %}
            {% set typeTotal = cosmetics|length %}
            {% set typeOwned = 0 %}
            {% for cosmetic in cosmetics %}
                {% if SESSION.user.hasCosmetic(cosmetic.id) %}
                    {% set typeOwned = typeOwned + 1 %}
                    {% set categoryStats = categoryStats|merge({("category-" ~ (cosmetic.category.id ?? 0)): {"owned": categoryStats["category-" ~ (cosmetic.category.id ?? 0)].owned ?? 0 + 1, "total": categoryStats["category-" ~ (cosmetic.category.id ?? 0)].total ?? 0}}) %}
                {% endif %}
                {% set categoryStats = categoryStats|merge({("category-" ~ (cosmetic.category.id ?? 0)): {"owned": categoryStats["category-" ~ (cosmetic.category.id ?? 0)].owned ?? 0, "total": categoryStats["category-" ~ (cosmetic.category.id ?? 0)].total ?? 0 + 1}}) %}
            {% endfor %}
            {% set heroTypeStats = heroTypeStats|merge({("type-" ~ type): {"owned": typeOwned, "total": typeTotal}}) %}
            {% set typeStats = typeStats|merge({("type-" ~ type): {"owned": typeStats["type-"~type].owned ?? 0 + typeOwned, "total": typeStats["type-"~type].total ?? 0 + typeTotal}}) %}
            {% set heroOwned = heroOwned + typeOwned %}
            {% set heroTotal = heroTotal + typeTotal %}
        {% endfor %}
        {% set heroStats = heroStats|merge({("hero-" ~ hero): {"owned": heroOwned, "total": heroTotal, "types": heroTypeStats}}) %}
        {% set totalStats = {"owned": totalStats.owned ?? 0 + heroOwned, "total": totalStats.total ?? 0 + heroTotal} %}
    {% endfor %}
    <div class="mdl-grid">
        <div id="cosmetics-menu" class="mdl-cell mdl-cell--3-col">
            <ul class="demo-list-icon mdl-list mdl-shadow--2dp">
                <li class="mdl-list__item">
                    <span class="mdl-list__item-primary-content">
                        <button class="cosmetics-menu--refresh mdl-button mdl-js-button mdl-button--icon mdl-color--light-blue-A200"
                                disabled>
                            <i class="material-icons">refresh</i>
                        </button>
                        <span class="cosmetics-menu--btn">
                            <button id="import-btn"
                                    class="cosmetics-menu--import mdl-button mdl-js-button mdl-button--icon mdl-color-text--orange-700">
                                <i class="material-icons">file_download</i>
                            </button>
                            <label for="import-btn">Import</label>
                        </span>
                        <dialog id="import-collection--dialog" class="mdl-dialog">
                            <h4 class="mdl-dialog__title">Import</h4>
                            <div class="mdl-dialog__content">
                                <p>
                                    Import your collection by pasting your collection data here. It will replace the current collection, <b>there is no way back</b>.<br/>
                                    <b>We strongly suggest that you export the current collection before importing a new one.</b>
                                </p>
                                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                                    <textarea id="import-collection--textarea" class="mdl-textfield__input" type="text"
                                              rows="3" maxrows="3"></textarea>
                                    <label class="mdl-textfield__label" for="import-collection--textarea">Collection data (JSON format)</label>
                                    <span class="mdl-textfield__error">Data isn't formatted correctly</span>
                                </div>
                            </div>
                            <div class="mdl-dialog__actions">
                                <button type="button" class="mdl-button mdl-button--raised mdl-button--colored confirm">Import</button>
                                <button type="button" class="mdl-button mdl-button--raised close">Cancel</button>
                            </div>
                        </dialog>
                        <span class="cosmetics-menu--btn">
                            <button id="export-btn"
                                    class="cosmetics-menu--export cosmetics-menu--btn mdl-button mdl-js-button mdl-button--icon mdl-color-text--green">
                                <i class="material-icons">file_upload</i>
                            </button>
                            <label for="export-btn">Export</label>
                        </span>
                        <span class="cosmetics-menu--btn">
                            {% set canPrev = pages.start > 0 %}
                            <a id="prev-page-btn"
                               {% if canPrev %}href="./collection.php?page={{ GET.page ?? 0 - 1 }}"{% endif %}
                               class="cosmetics-menu--btn mdl-button mdl-js-button mdl-button--icon" {{ not canPrev ? "disabled" }}>
                                <i class="material-icons">navigate_before</i>
                            </a>
                            {% set canNext = pages.end < heroStats|length %}
                            <a id="next-page-btn"
                               {% if canNext %}href="./collection.php?page={{ GET.page ?? 0 + 1 }}"{% endif %}
                               class="cosmetics-menu--btn mdl-button mdl-js-button mdl-button--icon is-disabled" {{ not canNext ? "disabled" }}>
                                <i class="material-icons">navigate_next</i>
                            </a>
                        </span>
                    </span>
                </li>
                <hr/>
                {% set ratio = totalStats.total is defined ? (totalStats.owned ?? 0 / totalStats.total) : 1 %}
                <li class="cosmetics-menu--item mdl-list__item mdl-list__item--two-line"
                        {% if settings["collection-show-colors"].value ?? true %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                    <span class="mdl-list__item-primary-content mdl-typography--font-bold">
                        <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                             src="img/collection/heroes/allheroes.png"/>
                        <span class="cosmetics-menu--item--text">Show Owned</span>
                        <span class="mdl-list__item-sub-title cosmetics-menu--item--stats">
                            {{ (ratio * 100)|round(2, "floor") }}% ({{ totalStats.owned ?? 0 }}
                            / {{ totalStats.total ?? 0 }})
                        </span>
                    </span>
                    <span class="mdl-list__item-secondary-action">
                        <label class="mdl-switch mdl-js-switch mdl-js-ripple-effect" for="switch-show-owned">
                            <input type="checkbox" id="switch-show-owned" class="setting-input mdl-switch__input"
                                   data-setting="collection-show-owned-cosmetics" {{ settings["collection-show-owned-cosmetics"].value ?? true ? "checked" }}>
                        </label>
                    </span>
                </li>
                {% set heroStat = heroStats["hero-0"] is defined ? heroStats["hero-0"] : null %}
                {% set ratio = heroStat != null ? (heroStat.owned / heroStat.total) : 1 %}
                <li class="cosmetics-menu--item cosmetics-menu--item-hero mdl-list__item mdl-list__item--two-line"
                        {% if settings["collection-show-colors"].value ?? true %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                    <span class="mdl-list__item-primary-content">
                        <a href="#allheroes">
                            <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                                 src="img/collection/heroes/allheroes.png"/>
                            <span class="cosmetics-menu--item--text">All Heroes</span>
                        </a>
                        <span class="mdl-list__item-sub-title cosmetics-menu--item--stats">
                            {{ (ratio * 100)|round(2, "floor") }}% ({{ heroStat.owned ?? 0 }}
                            / {{ heroStat.total ?? 0 }})
                        </span>
                    </span>
                    <span class="mdl-list__item-secondary-action">
                        <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="hero-checkbox-allheroes">
                            <input type="checkbox" id="hero-checkbox-allheroes"
                                   class="setting-input mdl-checkbox__input"
                                   data-setting="collection-show-hero-allheroes" {{ settings["collection-show-hero-allheroes"].value ?? true ? "checked" }}/>
                        </label>
                    </span>
                </li>
                {% for hero in SESSION.heroes %}
                    {% set heroStat = heroStats["hero-"~hero.id] is defined ? heroStats["hero-"~hero.id] : null %}
                    {% set ratio = heroStat != null ? (heroStat.owned / heroStat.total) : 1 %}
                    <li class="cosmetics-menu--item cosmetics-menu--item-hero mdl-list__item mdl-list__item--two-line"
                            {% if settings["collection-show-colors"].value ?? true %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                        <span class="mdl-list__item-primary-content">
                            <a href="#{{ hero.slug }}">
                                <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                                     src="img/collection/heroes/{{ hero.slug }}.png"/>
                                <span class="cosmetics-menu--item--text">{{ hero.name }}</span>
                            </a>
                            <span class="mdl-list__item-sub-title cosmetics-menu--item--stats">
                                {{ (ratio * 100)|round(2, "floor") }}% ({{ heroStat.owned ?? 0 }}
                                / {{ heroStat.total ?? 0 }})
                            </span>
                        </span>
                        <span class="mdl-list__item-secondary-action">
                            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                                   for="hero-checkbox-{{ hero.slug }}">
                                <input type="checkbox" id="hero-checkbox-{{ hero.slug }}"
                                       class="setting-input mdl-checkbox__input"
                                       data-setting="collection-show-hero-{{ hero.slug }}"
                                        {{ settings["collection-show-hero-" ~ hero.slug].value ?? true ? "checked" }}/>
                            </label>
                        </span>
                    </li>
                {% endfor %}
                <hr/>
                {% set categoryStat = categoryStats["category-0"] is defined ? categoryStats["category-0"] : null %}
                {% set ratio = categoryStat != null ? (categoryStat.owned / categoryStat.total) : 1 %}
                <li class="cosmetics-menu--item cosmetics-menu--item-category mdl-list__item mdl-list__item--two-line"
                        {% if settings["collection-show-colors"].value ?? true %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                    <span class="mdl-list__item-primary-content">
                        <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                             src="img/collection/categories/default.png"/>
                        <span class="cosmetics-menu--item--text">Default</span>
                        <span class="mdl-list__item-sub-title cosmetics-menu--item--stats">
                            {{ (ratio * 100)|round(2, "floor") }}% ({{ categoryStat.owned ?? 0 }}
                            /{{ categoryStat.total ?? 0 }})
                        </span>
                    </span>
                    <span id="cosmetics-menu--category-default" class="mdl-list__item-secondary-action">
                        <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                               for="category-checkbox-default">
                            <input type="checkbox" id="category-checkbox-default"
                                   class="setting-input mdl-checkbox__input"
                                   data-setting="collection-show-category-default" {{ settings["collection-show-category-default"].value ?? true ? "checked" }}/>
                        </label>
                    </span>
                    <div class="mdl-tooltip" data-mdl-for="cosmetics-menu--category-default">
                        Obtained by default
                    </div>
                </li>
                {% for category in SESSION.categories %}
                    {% set categoryStat = categoryStats["category-"~category.id] is defined ? categoryStats["category-"~category.id] : null %}
                    {% set ratio = categoryStat != null ? (categoryStat.owned / categoryStat.total) : 1 %}
                    <li class="cosmetics-menu--item cosmetics-menu--item-category mdl-list__item mdl-list__item--two-line"
                            {% if settings["collection-show-colors"].value ?? true %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                        <span class="mdl-list__item-primary-content">
                            <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                                 src="img/collection/categories/{{ category.slug }}.png"/>
                            <span class="cosmetics-menu--item--text">{{ category.name }}</span>
                            <span class="mdl-list__item-sub-title cosmetics-menu--item--stats">
                                {{ (ratio * 100)|round(2, "floor") }}% ({{ categoryStat.owned ?? 0 }}
                                /{{ categoryStat.total ?? 0 }})
                            </span>
                        </span>
                        <span id="cosmetics-menu--category-{{ category.slug }}"
                              class="mdl-list__item-secondary-action">
                            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                                   for="category-checkbox-{{ category.slug }}">
                                <input type="checkbox" id="category-checkbox-{{ category.slug }}"
                                       class="setting-input mdl-checkbox__input"
                                       data-setting="collection-show-category-{{ category.slug }}"
                                        {{ settings["collection-show-category-" ~ category.slug].value ?? true ? "checked" }}/>
                            </label>
                        </span>
                        <div class="mdl-tooltip"
                             data-mdl-for="cosmetics-menu--category-{{ category.slug }}">
                            {{ category.description|breverynword(5) }}
                        </div>
                    </li>
                {% endfor %}
                <hr/>
                {% for type in SESSION.types %}
                    {% set typeStat = typeStats["type-"~type.id] is defined ? typeStats["type-"~type.id] : null %}
                    {% set ratio = typeStat != null ? (typeStat.owned / typeStat.total) : 1 %}
                    <li class="cosmetics-menu--item cosmetics-menu--item-type mdl-list__item mdl-list__item--two-line"
                            {% if settings["collection-show-colors"].value ?? true %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                        <span class="mdl-list__item-primary-content">
                            <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                                 src="img/collection/types/{{ type.slug }}.png"/>
                            <span class="cosmetics-menu--item--text">{{ type.name }}</span>
                            <span class="mdl-list__item-sub-title cosmetics-menu--item--stats">
                                {{ (ratio * 100)|round(2, "floor") }}% ({{ typeStat.owned ?? 0 }}
                                /{{ typeStat.total ?? 0 }})
                            </span>
                        </span>
                        <span id="cosmetics-menu--type-{{ type.slug }}"
                              class="mdl-list__item-secondary-action">
                            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                                   for="type-checkbox-{{ type.slug }}">
                                <input type="checkbox" id="type-checkbox-{{ type.slug }}"
                                       class="setting-input mdl-checkbox__input"
                                       data-setting="collection-show-type-{{ type.slug }}"
                                        {{ settings["collection-show-type-" ~ type.slug].value ?? true ? "checked" }}/>
                            </label>
                        </span>
                    </li>
                {% endfor %}
            </ul>
        </div>
        <div class="mdl-cell mdl-cell--9-col-desktop">
            <table id="cosmetics-table" class="mdl-data-table mdl-js-data-table mdl-shadow--2dp">
                {% for hero, types in SESSION.cosmetics %}
                    {% if pages.start <= loop.index0 and loop.index0 < pages.end %}
                        {% set ratio = heroStats["hero-"~hero].owned / heroStats["hero-"~hero].total %}
                        <tbody class="cosmetics-table--body">
                        <tr class="cosmetics-table--hero"
                                {% if settings["collection-show-colors"].value ?? true %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                            <td colspan="{{ settings["collection-cosmetics-per-row"].value ?? 3 - 1 }}"
                                class="mdl-typography--headline mdl-data-table__cell--non-numeric">
                                <a name="{{ hero > 0 ? SESSION.heroes[hero].slug : "allheroes" }}">
                                    {{ hero > 0 ? SESSION.heroes[hero].name : "All Heroes" }}
                                </a>
                            </td>
                            <td>
                                {{ (ratio * 100)|round(2, "floor") }}%
                                ({{ heroStats["hero-"~hero].owned }} / {{ heroStats["hero-"~hero].total }})
                            </td>
                        </tr>
                        {% for type, cosmetics in types %}
                            {% set ratio = heroStats["hero-"~hero].types["type-"~type].owned / heroStats["hero-"~hero].types["type-"~type].total %}
                            <tr class="cosmetics-table--type"
                                    {% if settings["collection-show-colors"].value ?? true %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                                <td colspan="{{ settings["collection-cosmetics-per-row"].value ?? 3 - 1 }}">
                                    {{ SESSION.types[type].name }}s
                                </td>
                                <td>
                                    {{ (ratio * 100)|round(2, "floor") }}%
                                    ({{ heroStats["hero-"~hero].types["type-"~type].owned }}
                                    / {{ heroStats["hero-"~hero].types["type-"~type].total }})
                                </td>
                            </tr>
                            {% for row in cosmetics|batch(settings["collection-cosmetics-per-row"].value ?? 3) %}
                                <tr>
                                    {% for cosmetic in row %}
                                        <td class="cosmetics-table--category category-{{ cosmetic.category is not null ? cosmetic.category.id : 0 }}">
                                            {{ cosmeticMacro.cosmetic(cosmetic, SESSION.user.hasCosmetic(cosmetic.id)) }}
                                        </td>
                                    {% endfor %}
                                </tr>
                            {% endfor %}
                        {% endfor %}
                        </tbody>
                    {% endif %}
                {% endfor %}
            </table>
        </div>
    </div>
    <script defer src="scripts/collection.js"></script>
{% endblock %}