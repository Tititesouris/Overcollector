{% import "cosmetic.twig" as cosmeticMacro %}
{% extends "page.twig" %}
{% block body %}
    <div class="mdl-grid">
        <div id="cosmetics-menu" class="mdl-cell mdl-cell--3-col">
            <ul class="demo-list-icon mdl-list mdl-shadow--2dp">
                <li class="mdl-list__item">
                    <span class="mdl-list__item-primary-content">
                        <button class="cosmetics-menu--refresh mdl-button mdl-js-button mdl-button--icon mdl-color--light-blue-A200"
                                disabled>
                            <i class="material-icons">refresh</i>
                        </button>
                        <span class="cosmetics-menu--btn">
                            <button id="import-btn"
                                    class="cosmetics-menu--import mdl-button mdl-js-button mdl-button--icon mdl-color-text--orange-700">
                                <i class="material-icons">file_download</i>
                            </button>
                            <label for="import-btn">Import</label>
                        </span>
                        <span class="cosmetics-menu--btn">
                            <button id="export-btn"
                                    class="cosmetics-menu--export cosmetics-menu--btn mdl-button mdl-js-button mdl-button--icon mdl-color-text--green">
                                <i class="material-icons">file_upload</i>
                            </button>
                            <label for="export-btn">Export</label>
                        </span>
                        <span class="cosmetics-menu--btn">
                            {% set canPrev = PAGES.start > 0 %}
                            <a id="prev-page-btn"
                               {% if canPrev %}href="./collection.php?page={{ PAGES.current - 1 }}"{% endif %}
                               class="cosmetics-menu--btn mdl-button mdl-js-button mdl-button--icon" {{ not canPrev ? "disabled" }}>
                                <i class="material-icons">navigate_before</i>
                            </a>
                            {% set canNext = PAGES.end < STATS.heroes|length %}
                            <a id="next-page-btn"
                               {% if canNext %}href="./collection.php?page={{ PAGES.current + 1 }}"{% endif %}
                               class="cosmetics-menu--btn mdl-button mdl-js-button mdl-button--icon is-disabled" {{ not canNext ? "disabled" }}>
                                <i class="material-icons">navigate_next</i>
                            </a>
                        </span>
                    </span>
                </li>
                <hr/>
                {% set ratio = STATS.total > 0 ? (STATS.owned / STATS.total) : 1 %}
                <li class="cosmetics-menu--item mdl-list__item mdl-list__item--two-line"
                        {% if USERSETTINGS["collection-show-colors"].value %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                    <span class="mdl-list__item-primary-content mdl-typography--font-bold">
                        <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                             src="img/collection/heroes/allheroes.png"/>
                        <span class="cosmetics-menu--item--text">Show Owned</span>
                        <span class="mdl-list__item-sub-title cosmetics-menu--item--STATS">
                            <span class="cosmetics-menu--item--STATS-completion">
                                {{ (ratio * 100)|round(2, "floor") }}%
                                ({{ STATS.owned }} / {{ STATS.total }})
                            </span><br/>
                            <span class="cosmetics-menu--item--STATS-credits">
                                ₡{{ STATS.totalCredits - STATS.ownedCredits }}
                                (₡{{ STATS.ownedCredits }} / ₡{{ STATS.totalCredits }})
                            </span>
                        </span>
                    </span>
                    <span class="mdl-list__item-secondary-action">
                        <label class="mdl-switch mdl-js-switch mdl-js-ripple-effect" for="switch-show-owned">
                            <input type="checkbox" id="switch-show-owned" class="setting-input mdl-switch__input"
                                   data-setting-id="{{ USERSETTINGS["collection-show-owned-cosmetics"].settingId }}" {{ USERSETTINGS["collection-show-owned-cosmetics"].value ? "checked" }}>
                        </label>
                    </span>
                </li>
                {% set stat = STATS.heroes[0] ?? {"owned": 0, "total": 0, "ownedCredits": 0, "totalCredits": 0} %}
                {% set ratio = stat.total > 0 ? (stat.owned / stat.total) : 1 %}
                <li class="cosmetics-menu--item cosmetics-menu--item-hero mdl-list__item mdl-list__item--two-line"
                        {% if USERSETTINGS["collection-show-colors"].value and USERSETTINGS["collection-show-hero-allheroes"].value %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                    <span class="mdl-list__item-primary-content">
                        <a href="./collection.php#allheroes">
                            <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                                 src="img/collection/heroes/allheroes.png"/>
                            <span class="cosmetics-menu--item--text">All Heroes</span>
                        </a>
                        {% if USERSETTINGS["collection-show-hero-allheroes"].value %}
                            <span class="mdl-list__item-sub-title cosmetics-menu--item--STATS">
                                <span class="cosmetics-menu--item--STATS-completion">
                                    {{ (ratio * 100)|round(2, "floor") }}%
                                    ({{ stat.owned }} / {{ stat.total }})
                                </span><br/>
                                <span class="cosmetics-menu--item--STATS-credits">
                                    ₡{{ stat.totalCredits - stat.ownedCredits }}
                                    (₡{{ stat.ownedCredits }} / ₡{{ stat.totalCredits }})
                                </span>
                            </span>
                        {% endif %}
                    </span>
                    <span class="mdl-list__item-secondary-action">
                        <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="hero-checkbox-allheroes">
                            <input type="checkbox" id="hero-checkbox-allheroes"
                                   class="setting-input mdl-checkbox__input"
                                   data-setting-id="{{ USERSETTINGS["collection-show-hero-allheroes"].settingId }}" {{ USERSETTINGS["collection-show-hero-allheroes"].value ? "checked" }}/>
                        </label>
                    </span>
                </li>
                {% for hero in HEROES %}
                    {% set stat = STATS.heroes[hero.id] ?? {"owned": 0, "total": 0, "ownedCredits": 0, "totalCredits": 0} %}
                    {% set ratio = stat.total > 0 ? (stat.owned / stat.total) : 1 %}
                    <li class="cosmetics-menu--item cosmetics-menu--item-hero mdl-list__item mdl-list__item--two-line"
                            {% if USERSETTINGS["collection-show-colors"].value and USERSETTINGS["collection-show-hero-" ~ hero.slug].value %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                        <span class="mdl-list__item-primary-content">
                            <a href="./collection.php?page={{ loop.index // USERSETTINGS["collection-heroes-per-page"].value }}#{{ hero.slug }}">
                                <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                                     src="img/collection/heroes/{{ hero.slug }}.png"/>
                                <span class="cosmetics-menu--item--text">{{ hero.name }}</span>
                            </a>
                            {% if USERSETTINGS["collection-show-hero-" ~ hero.slug].value %}
                                <span class="mdl-list__item-sub-title cosmetics-menu--item--STATS">
                                    <span class="cosmetics-menu--item--STATS-completion">
                                        {{ (ratio * 100)|round(2, "floor") }}%
                                        ({{ stat.owned }} / {{ stat.total }})
                                    </span><br/>
                                    <span class="cosmetics-menu--item--STATS-credits">
                                        ₡{{ stat.totalCredits - stat.ownedCredits }}
                                        (₡{{ stat.ownedCredits }} / ₡{{ stat.totalCredits }})
                                    </span>
                                </span>
                            {% endif %}
                        </span>
                        <span class="mdl-list__item-secondary-action">
                            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                                   for="hero-checkbox-{{ hero.slug }}">
                                <input type="checkbox" id="hero-checkbox-{{ hero.slug }}"
                                       class="setting-input mdl-checkbox__input"
                                       data-setting-id="{{ USERSETTINGS["collection-show-hero-" ~ hero.slug].settingId }}"
                                        {{ USERSETTINGS["collection-show-hero-" ~ hero.slug].value ? "checked" }}/>
                            </label>
                        </span>
                    </li>
                {% endfor %}
                <hr/>
                {% set stat = STATS.categories[0] ?? {"owned": 0, "total": 0, "ownedCredits": 0, "totalCredits": 0} %}
                {% set ratio = stat.total > 0 ? (stat.owned / stat.total) : 1 %}
                <li class="cosmetics-menu--item cosmetics-menu--item-category mdl-list__item mdl-list__item--two-line"
                        {% if USERSETTINGS["collection-show-colors"].value and USERSETTINGS["collection-show-category-default"].value %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                    <span class="mdl-list__item-primary-content">
                        <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                             src="img/collection/categories/default.png"/>
                        <span class="cosmetics-menu--item--text">Default</span>
                    </span>
                    <span id="cosmetics-menu--category-default" class="mdl-list__item-secondary-action">
                        <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                               for="category-checkbox-default">
                            <input type="checkbox" id="category-checkbox-default"
                                   class="setting-input mdl-checkbox__input"
                                   data-setting-id="{{ USERSETTINGS["collection-show-category-default"].settingId }}" {{ USERSETTINGS["collection-show-category-default"].value ? "checked" }}/>
                        </label>
                    </span>
                    <div class="mdl-tooltip" data-mdl-for="cosmetics-menu--category-default">
                        Obtained by default
                    </div>
                </li>
                {% for category in CATEGORIES %}
                    {% set stat = STATS.categories[category.id] ?? {"owned": 0, "total": 0, "ownedCredits": 0, "totalCredits": 0} %}
                    {% set ratio = stat.total > 0 ? (stat.owned / stat.total) : 1 %}
                    <li class="cosmetics-menu--item cosmetics-menu--item-category mdl-list__item mdl-list__item--two-line"
                            {% if USERSETTINGS["collection-show-colors"].value and USERSETTINGS["collection-show-category-" ~ category.slug].value %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                        <span class="mdl-list__item-primary-content">
                            <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                                 src="img/collection/categories/{{ category.slug }}.png"/>
                            <span class="cosmetics-menu--item--text">{{ category.name }}</span>
                            {% if USERSETTINGS["collection-show-category-" ~ category.slug].value %}
                                <span class="mdl-list__item-sub-title cosmetics-menu--item--STATS">
                                    <span class="cosmetics-menu--item--STATS-completion">
                                        {{ (ratio * 100)|round(2, "floor") }}%
                                        ({{ stat.owned }} / {{ stat.total }})
                                    </span><br/>
                                    {% if category.slug not in ["achievements", "competitive", "summergames-achievements", "halloweenterror-achievements", "winterwonderland-achievements", "blizzard", "originsedition", "preorder", "blizzcon"] %}
                                        <span class="cosmetics-menu--item--STATS-credits">
                                            ₡{{ stat.totalCredits - stat.ownedCredits }}
                                            (₡{{ stat.ownedCredits }} / ₡{{ stat.totalCredits }})
                                        </span>
                                    {% endif %}
                                </span>
                            {% endif %}
                        </span>
                        <span id="cosmetics-menu--category-{{ category.slug }}"
                              class="mdl-list__item-secondary-action">
                            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                                   for="category-checkbox-{{ category.slug }}">
                                <input type="checkbox" id="category-checkbox-{{ category.slug }}"
                                       class="setting-input mdl-checkbox__input"
                                       data-setting-id="{{ USERSETTINGS["collection-show-category-" ~ category.slug].settingId }}"
                                        {{ USERSETTINGS["collection-show-category-" ~ category.slug].value ? "checked" }}/>
                            </label>
                        </span>
                        <div class="mdl-tooltip"
                             data-mdl-for="cosmetics-menu--category-{{ category.slug }}">
                            {{ category.description|breverynword(5) }}
                        </div>
                    </li>
                {% endfor %}
                <hr/>
                {% for type in TYPES %}
                    {% set stat = STATS.types[type.id] ?? {"owned": 0, "total": 0, "ownedCredits": 0, "totalCredits": 0} %}
                    {% set ratio = stat.total > 0 ? (stat.owned / stat.total) : 1 %}
                    <li class="cosmetics-menu--item cosmetics-menu--item-type mdl-list__item mdl-list__item--two-line"
                            {% if USERSETTINGS["collection-show-colors"].value and USERSETTINGS["collection-show-type-" ~ type.slug].value %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                        <span class="mdl-list__item-primary-content">
                            <img class="cosmetics-menu--item--image mdl-list__item-avatar"
                                 src="img/collection/types/{{ type.slug }}.png"/>
                            <span class="cosmetics-menu--item--text">{{ type.name }}</span>
                            {% if USERSETTINGS["collection-show-type-" ~ type.slug].value %}
                                <span class="mdl-list__item-sub-title cosmetics-menu--item--STATS">
                                    <span class="cosmetics-menu--item--STATS-completion">
                                        {{ (ratio * 100)|round(2, "floor") }}%
                                        ({{ stat.owned }} /{{ stat.total }})
                                    </span><br/>
                                    {% if type.slug not in ["playericon", "weapon"] %}
                                        <span class="cosmetics-menu--item--STATS-credits">
                                            ₡{{ stat.totalCredits - stat.ownedCredits }}
                                            (₡{{ stat.ownedCredits }} / ₡{{ stat.totalCredits }})
                                        </span>
                                    {% endif %}
                                </span>
                            {% endif %}
                        </span>
                        <span id="cosmetics-menu--type-{{ type.slug }}"
                              class="mdl-list__item-secondary-action">
                            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                                   for="type-checkbox-{{ type.slug }}">
                                <input type="checkbox" id="type-checkbox-{{ type.slug }}"
                                       class="setting-input mdl-checkbox__input"
                                       data-setting-id="{{ USERSETTINGS["collection-show-type-" ~ type.slug].settingId }}"
                                        {{ USERSETTINGS["collection-show-type-" ~ type.slug].value ? "checked" }}/>
                            </label>
                        </span>
                    </li>
                {% endfor %}
            </ul>
        </div>
        <div class="mdl-cell mdl-cell--9-col-desktop">
            <div id="import-collection--section" style="display: none;">
                <h4>Import</h4>
                <div>
                    <p>
                        Import your collection by pasting your collection data here. It will replace the current
                        collection, <b>there is no way back</b>.<br/>
                        <b>We strongly suggest that you export the current collection as a back-up before importing a
                            new one.</b>
                    </p>
                    <div class="import-text mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                        <textarea id="import-collection--textarea" class="mdl-textfield__input" type="text"
                                  rows="3" maxrows="3"></textarea>
                        <label class="mdl-textfield__label" for="import-collection--textarea">Collection data (JSON
                            format)</label>
                        <span class="mdl-textfield__error">Data isn't formatted correctly</span>
                    </div>
                </div>
                <button type="button" class="mdl-button mdl-button--raised mdl-button--colored confirm">Import</button>
                <button type="button" class="mdl-button mdl-button--raised close">Cancel</button>
                <br/><br/>
            </div>
            <table id="cosmetics-table" class="mdl-data-table mdl-js-data-table mdl-shadow--2dp">
                {% for heroId, types in USER.sortCosmeticsByHeroesAndTypes(FILTEREDCOSMETICS) %}
                    {% if PAGES.start <= loop.index0 and loop.index0 < PAGES.end %}
                        {% set stat = STATS.heroes[heroId] ?? {"owned": 0, "total": 0, "ownedCredits": 0, "totalCredits": 0} %}
                        {% set ratio = stat.total > 0 ? (stat.owned / stat.total) : 1 %}
                        <tbody class="cosmetics-table--body">
                        <tr class="cosmetics-table--hero"
                                {% if USERSETTINGS["collection-show-colors"].value %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                            <td class="mdl-typography--headline mdl-data-table__cell--non-numeric">
                                <a name="{{ heroId > 0 ? HEROES[heroId].slug : "allheroes" }}">
                                    {{ heroId > 0 ? HEROES[heroId].name : "All Heroes" }}
                                </a>
                            </td>
                            <td colspan="{{ USERSETTINGS["collection-cosmetics-per-row"].value - 1 }}">
                                {{ (ratio * 100)|round(2, "floor") }}%
                                ({{ stat.owned }} / {{ stat.total }})
                                ₡{{ stat.totalCredits - stat.ownedCredits }}
                                (₡{{ stat.ownedCredits }} / ₡{{ stat.totalCredits }})
                            </td>
                        </tr>
                        {% for typeId, cosmetics in types %}
                            {% set stat = STATS.heroesTypes[heroId][typeId] ?? {"owned": 0, "total": 0, "ownedCredits": 0, "totalCredits": 0} %}
                            {% set ratio = stat.total > 0 ? (stat.owned / stat.total) : 1 %}
                            <tr class="cosmetics-table--type"
                                    {% if USERSETTINGS["collection-show-colors"].value %} style="background-color: {{ ratio|colorgradient("rgba") }};"{% endif %}>
                                <td>
                                    {{ TYPES[typeId].name }}s
                                </td>
                                <td colspan="{{ USERSETTINGS["collection-cosmetics-per-row"].value - 1 }}">
                                    {{ (ratio * 100)|round(2, "floor") }}%
                                    ({{ stat.owned }}
                                    / {{ stat.total }})
                                    {% if TYPES[typeId].slug not in ["playericon", "weapon"] %}
                                        ₡{{ stat.totalCredits ?? 0 - stat.ownedCredits ?? 0 }}
                                        (₡{{ stat.ownedCredits ?? 0 }} /
                                        ₡{{ stat.totalCredits ?? 0 }})
                                    {% endif %}
                                </td>
                            </tr>
                            {% for row in cosmetics|batch(USERSETTINGS["collection-cosmetics-per-row"].value) %}
                                <tr>
                                    {% for cosmetic in row %}
                                        <td class="cosmetics-table--category category-{{ cosmetic.category is not null ? cosmetic.category.id : 0 }}">
                                            {{ cosmeticMacro.cosmetic(cosmetic, USER.hasCosmetic(cosmetic.id)) }}
                                        </td>
                                    {% endfor %}
                                </tr>
                            {% endfor %}
                        {% endfor %}
                        </tbody>
                    {% endif %}
                {% endfor %}
            </table>
        </div>
    </div>
    <script defer src="scripts/collection.js"></script>
{% endblock %}